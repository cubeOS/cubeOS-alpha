;;;;;;;;;;;;;;;;;;;;;;
; ICD ; Clock Daemon ;
;;;;;;;;;;;;;;;;;;;;;;

;:### clock.init 
;:Starts the clock running at one tick per second.
;:
:clock.init

SET A, 0
SET B, 0
HWI [HW.GenericClock]	;turn off the clock, in case it's running

SET A, clock.tick	;clock.tick will be our target for the interrupt
JSR pih.newMsg		;get a new interrupt message
			;A is the new interrupt message

SET B, A	;the B register will contain the interrupt message
SET A, 2	;the A register contains the instruction for the clock
HWI [HW.GenericClock]

SET A, 0
SET B, 1	; will tick 60 times per second.
HWI [HW.GenericClock]

SET PC, POP ;exit

;:### clock.tick
;:The routine called by the clock on every tick.
;:
:clock.tick
ADD [env.tick], 1	;add one tick to system ticks.
SET PUSH, A
SET A, [env.tick]
MOD A, 60
IFE A, 0
    ADD [env.uptime], 1 ;add one to system uptime.
SET A, POP
SET PC, POP ;exit

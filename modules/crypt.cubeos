;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CRYPT ; Cryptography Lib ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;:# Crypt
;:Cryptography Library
;:

;:### crp.sum (inputPointer, inputLength)
;:Performs a BSD-checksum operation.
;:**returns** the 16-bit hash
;:
:crp.sum
ADD B, A
SET C, 0

:crp.sum.loop
SHR C, 1
BOR C, EX ;checksum = (checksum >> 1) + ((checksum & 1) << 15)

ADD C, [A] ;checksum += ch

ADD A, 1

IFN A, B
  SET PC, crp.sum.loop

SET A, C

;:### <strike>crp.dsHash (inputPointer, inputLength)</strike>
;:**depricated**
;:Reads data of *inputLength* from *inputPointer* and performs a hash function on it.
;:**returns** the 16-bit hash
;:
;:For every value, shift the word *i* left and BOR with EX. XOR all of the resulting values together to produce the hash.
;:```python
;:for i in inputLength:
;:	output ^ (inputPointer[i] << i)
;:```
;:

:crp.dsHash
SET PUSH, I
SET PUSH, J
SET I, A
SET J, 0

SET A, 0
ADD B, I ;B becomes the exit location

:crp.dsHash.loop
SET C, [I]
SHL C, J
BOR C, EX
XOR A, C

STI C, 0 ;efficient I and J increment
IFL I, B
  SET PC, crp.dsHash.loop

SET J, POP
SET I, POP
SET PC, POP
 ;
